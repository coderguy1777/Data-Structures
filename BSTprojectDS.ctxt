#BlueJ class context
comment0.target=BSTprojectDS
comment1.params=n
comment1.target=void\ insert(java.lang.Comparable)
comment1.text=\r\n\ The\ First\ Parameter\ of\ this\ method\ is\ checking\ the\ Node\ element\ that\ it\ is\ about\ to\ insert\r\n\ The\ Second\ Parameter\ of\ this\ method\ is\ inserting\ the\ Node\ into\ the\ BST\ TRee\r\n\ The\ Return\ value\ of\ this\ method\ is\ the\ value\ declared\ at\ the\ start\ of\ the\ method\ in\ the\ (),\ n\r\n\ inserts\ that\ into\ the\ BST\ Tree.\ \r\n
comment10.params=
comment10.target=BSTprojectDS()
comment11.params=n
comment11.target=BSTprojectDS(java.lang.Comparable)
comment12.params=checkMe
comment12.target=boolean\ exists(java.lang.Comparable)
comment12.text=\r\n\ The\ First\ parameter\ of\ this\ method\ is\ checking\ for\ the\ existance\ of\ a\ node\ to\ use\ in\ the\ BST.\r\n\ The\ Second\ Parameter\ of\ this\ Method\ is\ Checking\ for\ the\ existance\ of\ that\ Specific\ node.\ \r\n\ The\ Return\ value\ of\ this\ method\ is\ whether\ or\ not\ the\ node\ exists\ or\ not\ within\ the\ BST.\ \r\n
comment13.params=
comment13.target=void\ inOrderPrint()
comment13.text=\r\n\ The\ First\ parameter\ of\ this\ method\ is\ for\ the\ tree\ to\ be\ set\ to\ be\ traversed\ before\ printing\r\n\ The\ Second\ Parameter\ of\ this\ method\ is\ traversing\ the\ tree\ via\ inorderprint.\r\n\ The\ Return\ value\ of\ this\ method\ is\ the\ tree\ printed\ with\ the\ use\ of\ inorderprint.\ \r\n
comment2.params=
comment2.target=void\ balance()
comment2.text=\r\n\ This\ Method\ makes\ the\ BST\ Tree\ Perfectly\ Balanced\ once\ it\ is\ sorted.\ \r\n
comment3.params=
comment3.target=void\ printTree()
comment3.text=\r\n\ The\ First\ parameter\ of\ this\ method\ is\ making\ an\ arraylist\ to\ store\ the\ nodes\ in\ from\ the\ sorted\ nodes\ that\ came\r\n\ from\ the\ BSTInsert\ class\ \r\n\ The\ Second\ Parameter\ of\ this\ method\ is\ putting\ the\ ArrayList\ of\ Nodes\ that\ are\ sorted\ into\ the\ right\ spots\ by\ using\ strings.\ \r\n\ The\ Return\ Value\ of\ this\ method\ is\ the\ printed\ out\ BST\ Tree\ sorted\ and\ balanced.\ \r\n
comment4.params=parent\ n
comment4.target=java.lang.String\ inOrderprintTree_re(java.lang.String,\ BSTprojectDS.BSTNode)
comment4.text=\r\n\ This\ Method\ helps\ format\ the\ tree\ as\ well,\ by\ using\ spaces\ to\ place\ null\ parts\ of\ the\ tree\ spaced\ out,\ and\ \r\n\ not\ interfering\ with\ the\ formating\ of\ the\ main\ BST\ Tree.\ \r\n
comment5.params=n\ checkMe
comment5.target=boolean\ exists_re(java.lang.Comparable,\ BSTprojectDS.BSTNode)
comment5.text=\r\n\ This\ Method\ works\ along\ side\ the\ first\ Exists\ method,\ but\ is\ privated\ so\ it\ only\ checks\ for\ the\ \r\n\ existance\ of\ the\ node,\ and\ adds\ "Null"\ to\ the\ spots\ on\ the\ tree\ where\ it\ equals\ it\ and\ makes\ it\ null,\r\n\ and\ if\ it\ doesn't,\ puts\ in\ the\ Node\ checked\ into\ the\ spot\ on\ the\ main\ BST\ Tree.\ \r\n
comment6.params=n
comment6.target=void\ insert_re(java.lang.Comparable)
comment6.text=\r\n\ Another\ Insert\ Method\ used\ for\ putting\ in\ the\ nodes,\ via\ Curr,\ and\ moving\ down\ until\ the\ BSTInsert\ Class\ has\ been\ sorted\r\n\ and\ all\ the\ Nodes\ are\ int\ he\ proper\ position\ using\ the\ BSTNode\ curr\ to\ do\ so,\ and\ mainly\ helps\ with\ inserted\ the\ Nodes\ into\ the\ BST\ \r\n\ properly\ and\ sorted\ properly\ also\ to\ prevent\ any\ exceptions\ with\ null\ due\ to\ improper\ placement\ of\ the\ Node\ within\ the\ BST\ itself.\ \r\n
comment7.params=list
comment7.target=void\ balance_re(java.util.List)
comment7.text=\r\n\ A\ Recursive\ method\ that\ helps\ balance\ the\ BST\ Tree\ into\ two\ halves\ that\ are\ one\ BST\ Tree\ as\ a\ whole,\ but\ are\ \r\n\ divided\ into\ the\ two\ halves\ as\ specified\ in\ the\ project\ description\ via\ recursion\ in\ this\ case.\ \r\n
comment8.params=sublist\ branch
comment8.target=java.util.ArrayList\ printTree_re(java.util.ArrayList,\ BSTprojectDS.BSTNode)
comment8.text=\r\n\ This\ method\ here\ is\ the\ backbone\ of\ the\ print\ method,\ and\ adds\ --\ to\ signify\ branches,\ along\r\n\ with\ formatting\ the\ tree\ when\ it\ is\ printed\ in\ the\ terminal\ window.\ \r\n
comment9.params=list\ parent
comment9.target=java.util.ArrayList\ addAll(java.util.ArrayList,\ BSTprojectDS.BSTNode)
comment9.text=\r\n\ This\ Method\ here\ makes\ sure\ that\ the\ left\ nodes\ of\ the\ left\ branches\ of\ the\ BST\ Tree,\ \r\n\ along\ with\ the\ right,\ don't\ get\ printed\ as\ Null\ for\ certain\ parts\ of\ the\ BST\ tree,\ where\ they\r\n\ are\ not\ equal\ to\ null.\ \r\n
numComments=14
